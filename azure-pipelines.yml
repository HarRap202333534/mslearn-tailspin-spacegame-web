# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- '*'

pool:
  vmImage: 'ubuntu-22.04'
  demands:
  - npm

variables:
  buildConfiguration: 'Release'
  dotnetSdkVersion: '8.0.x'

steps:
- task: UseDotNet@2
  displayName: 'Use .NET SDK $(dotnetSdkVersion)'
  inputs:
    version: '$(dotnetSdkVersion)'

- task: UseNode@1
  displayName: 'Use Node.js 16.x'
  inputs:
    version: '16.x'

- task: Npm@1
  displayName: 'npm install'

- script: ./node_modules/.bin/node-sass Tailspin.SpaceGame.Web/wwwroot --output Tailspin.SpaceGame.Web/wwwroot
  displayName: 'node-sass'

- task: gulp@1
  displayName: 'gulp'

- script: echo $(build.buildNumber) > Tailspin.SpaceGame.Web/wwwroot/buildinfo.txt

- task: DotNetCoreCLI@2
  displayName: 'dotnet restore'
  inputs:
    command: 'restore'

- task: DotNetCoreCLI@2
  displayName: 'dotnet build debug'
  inputs:
    command: 'build'
    arguments: '--configuration Debug'

- task: DotNetCoreCLI@2
  displayName: 'dotnet publish debug'
  inputs:
    command: 'publish'
    arguments: '--no-build --configuration Debug --output $(Build.ArtifactsDirectory)/Debug'

- task: DotNetCoreCLI@2
  displayName: 'dotnet build release'
  inputs:
    command: 'build'
    arguments: '--configuration $(buildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: 'dotnet publish release'
  inputs:
    command: 'publish'
    arguments: '--no-build --configuration Release --output $(Build.ArtifactsDirectory)/Release'
    zipAfterPublish: true

- task: PublishBuildArtifacts@1
  displayName: 'Publish build artifacts'
  condition: succeeded()
